<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<!-- Connector  -->
	<!-- QAALevel of the Demo SP -->
	<entry key="DEMO-SP.qaalevel">3</entry>


	<!-- IF a SP is not listed, the DEFAULT parameters it can access might be
		(none|all|list;Of;Parameters) -->
	<entry key="sp.default.parameters">all</entry>
	<!-- Specific case for a listed SP (none|all|list;Of;Parameters) -->
	<!-- <entry key="DEMO-SP">givenName;age;dateOfBirth;nationalityCode;isAgeOver;eIdentifier</entry> -->

	<!-- Id of this Connector -->
	<entry key="connector.id">UK</entry>
	<!-- Connector assertion URL -->
	<entry key="connector.assertion.url">${CONNECTOR_URL}/ColleagueResponse</entry>
	<!-- Connector destination URL -->
	<entry key="connector.destination.url">${EXT_CONNECTOR_URL}/ServiceProvider</entry>
	<!--  Default SP attributes needed on the VIdP -->
	<!-- SP Sector -->
	<entry key="connector.spSector">DEMO-connector</entry>
	<!-- SP Application -->
	<entry key="connector.spApplication">DEMO-connector</entry>
	<!-- SP Country-->
	<entry key="connector.spCountry">UK</entry>
	<!-- SP Institution-->
	<entry key="connector.spInstitution">DEMO-connector</entry>

	<entry key="saml.sp">SP-Connector</entry>
	<entry key="saml.service">Connector-Service</entry>

	<entry key="service.number">8</entry>

	<entry key="service1.id">UK</entry>
	<entry key="service1.name">LOCAL-EIDAS-UK</entry>
	<entry key="service1.url">${CONNECTOR_URL}/ColleagueRequest</entry>
	<entry key="service1.skew">1000</entry>
	<entry key="service1.metadata.url">${CONNECTOR_URL}/ServiceMetadata</entry>

	<entry key="service2.id">${COUNTRY_1_CODE}</entry>
	<entry key="service2.name">${COUNTRY_1_NAME}</entry>
	<entry key="service2.url">${COUNTRY_1_PROXY_URL}/ColleagueRequest</entry>
	<entry key="service2.skew">1000</entry>
	<entry key="service2.metadata.url">${COUNTRY_1_PROXY_URL}/ServiceMetadata</entry>

	<entry key="service3.id">${COUNTRY_2_CODE}</entry>
	<entry key="service3.name">${COUNTRY_2_NAME}</entry>
	<entry key="service3.url">${COUNTRY_2_PROXY_URL}/ColleagueRequest</entry>
	<entry key="service3.skew">1000</entry>
	<entry key="service3.metadata.url">${COUNTRY_2_PROXY_URL}/ServiceMetadata</entry>

	<entry key="service4.id">${COUNTRY_3_CODE}</entry>
	<entry key="service4.name">${COUNTRY_3_NAME}</entry>
	<entry key="service4.url">${COUNTRY_3_PROXY_URL}/ColleagueRequest</entry>
	<entry key="service4.skew">1000</entry>
	<entry key="service4.metadata.url">${COUNTRY_3_PROXY_URL}/ServiceMetadata</entry>

	<entry key="service5.id">${COUNTRY_4_CODE}</entry>
	<entry key="service5.name">${COUNTRY_4_NAME}</entry>
	<entry key="service5.url">${COUNTRY_4_PROXY_URL}/ColleagueRequest</entry>
	<entry key="service5.skew">1000</entry>
	<entry key="service5.metadata.url">${COUNTRY_4_PROXY_URL}/ServiceMetadata</entry>

	<entry key="service6.id">${COUNTRY_5_CODE}</entry>
	<entry key="service6.name">${COUNTRY_5_NAME}</entry>
	<entry key="service6.url">${COUNTRY_5_PROXY_URL}/ColleagueRequest</entry>
	<entry key="service6.skew">1000</entry>
	<entry key="service6.metadata.url">${COUNTRY_5_PROXY_URL}/ServiceMetadata</entry>

	<entry key="service7.id">${COUNTRY_6_CODE}</entry>
	<entry key="service7.name">${COUNTRY_6_NAME}</entry>
	<entry key="service7.url">${COUNTRY_6_PROXY_URL}/ColleagueRequest</entry>
	<entry key="service7.skew">1000</entry>
	<entry key="service7.metadata.url">${COUNTRY_6_PROXY_URL}/ServiceMetadata</entry>

	<entry key="service8.id">${COUNTRY_7_CODE}</entry>
	<entry key="service8.name">${COUNTRY_7_NAME}</entry>
	<entry key="service8.url">${COUNTRY_7_PROXY_URL}/ColleagueRequest</entry>
	<entry key="service8.skew">1000</entry>
	<entry key="service8.metadata.url">${COUNTRY_7_PROXY_URL}/ServiceMetadata</entry>

	<!-- Id of this Service -->
	<entry key="service.id">UK</entry>
	<!-- Country Code of this Service -->
	<entry key="service.countrycode">UK</entry>
	<!-- QAALevel of this Service -->
	<entry key="service.maxQAAlevel">4</entry>
	<!-- Present consent-type form? (true/false) -->
	<entry key="service.askconsent.type">false</entry>
	<!-- Present consent-value form? (true/false) -->
	<entry key="service.askconsent.value">false</entry>
	<!-- Method to call after IdP -->
	<entry key="service.specificidpredirect.url">${PROXY_URL}/IdpResponse</entry>
	<!-- Method to call after AP -->
	<entry key="service.specificapredirect.url">${CONNECTOR_URL}/APSelector</entry>
	<!-- Action of Citizen Consent -->
	<entry key="service.citizenConsentUrl">CitizenConsent</entry>

	<!-- SECURITY POLICY -->
	<!-- Bypass SP validation -->
	<entry key="validation.bypass">true</entry>
	<!-- Validate SP by ID and Domain or only by Domain (spid|domain) -->
	<entry key="validation.method">spid</entry>
	<!-- limit of requests per IP during max.time.ip (-1 unlimited) -->
	<entry key="max.requests.ip">-1</entry>
	<!-- limit of requests per SP during max.time.ip (-1 unlimited) -->
	<entry key="max.requests.sp">-1</entry>
	<!-- time frame for IP requests (seconds) -->
	<entry key="max.time.ip">60</entry>
	<!-- time frame for SP requests (seconds) -->
	<entry key="max.time.sp">60</entry>
	<!-- allowed SP domains (none|all|list;Of;Domains) -->
	<entry key="trusted.sp.domains">all</entry>
	<!-- min QAA level allowed -->
	<entry key="min.qaaLevel.value">1</entry>
	<!-- max QAA level allowed -->
	<entry key="max.qaaLevel.value">4</entry>
	<!--  New Configuration -->
	<!--  SP's ProviderName alias could be none or the PROVIDERNAME  -->
	<entry key="DEMO-SP.validation">none</entry>
	<entry key="DEMO-SP-CB.validation">none</entry>
	<entry key="DEMO-SP-CC.validation">none</entry>
	<entry key="DEMO-SP-CD.validation">none</entry>
	<entry key="DEMO-SP-CE.validation">none</entry>
	<entry key="DEMO-SP-CF.validation">none</entry>

	<!-- PLugin connector -->
        <entry key="active.module.connector">true</entry>

	<!-- PLugin service -->
        <entry key="active.module.service">true</entry>

	<!-- PLugin AT -->
	<entry key="active.module.pluginAT">true</entry>
	<entry key="at.plugin.configLocation">c:\Pgm\projects\configEidas\tomcat\</entry>

	<!-- PLugin DE -->
	<entry key="active.module.pluginDE">true</entry>
	<entry key="de.plugin.configLocation">c:\Pgm\projects\configEidas\tomcat\</entry>
	<!--Profile 1 or 2, if missing then the connector will work in Profile 1-->
	<entry key="de.plugin.profile">1</entry>

	<!-- Binding -->
        <entry key="allow.redirect.binding">true</entry>
	<entry key="validate.binding">true</entry>

        <!-- Certificates -->
        <entry key="check_certificate_validity_period">false</entry>
        <entry key="disallow_self_signed_certificate">false</entry>

        <!-- signing Algorithm SHA_512(default),SHA_384,SHA_256 -->
		<!-- http://www.w3.org/2001/04/xmldsig-more#rsa-sha256 -->
		<!-- http://www.w3.org/2001/04/xmldsig-more#rsa-sha384 -->
		<!-- http://www.w3.org/2001/04/xmldsig-more#rsa-sha512 -->

        <entry key="signature.algorithm">http://www.w3.org/2001/04/xmldsig-more#rsa-sha512</entry>

        <!-- List of incoming Signature algorithms white list separated by ; (default all)
             http://www.w3.org/2001/04/xmldsig-more#rsa-sha256;
             http://www.w3.org/2001/04/xmldsig-more#rsa-sha384;
             http://www.w3.org/2001/04/xmldsig-more#rsa-sha512;
             http://www.w3.org/2001/04/xmldsig-more#rsa-ripemd160;
             http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256;
             http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384;
             http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512 -->

        <entry key="signature.algorithm.whitelist">
       		 http://www.w3.org/2001/04/xmldsig-more#rsa-sha256;
             http://www.w3.org/2001/04/xmldsig-more#rsa-sha384;
             http://www.w3.org/2001/04/xmldsig-more#rsa-sha512;
             http://www.w3.org/2001/04/xmldsig-more#rsa-ripemd160;
             http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256;
             http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384;
             http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512 </entry>

       <!-- signing response assertion true/false (default false) -->
        <entry key="response.sign.assertions">true</entry>

       <!-- Encryption algorithm -->
        <entry key="data.encryption.algorithm"></entry>
        <!-- List of Encryption algorithms
	   http://www.w3.org/2009/xmlenc11#aes128-gcm;
	   http://www.w3.org/2009/xmlenc11#aes256-gcm;
	   http://www.w3.org/2009/xmlenc11#aes192-gcm

        -->
     <!-- Decryption algorithm Whitelist-->

       <entry key="encryption.algorithm.whitelist">
              http://www.w3.org/2009/xmlenc11#aes128-gcm;
	      http://www.w3.org/2009/xmlenc11#aes256-gcm;
	      http://www.w3.org/2009/xmlenc11#aes192-gcm</entry>


        <!--Metadata -->
        <entry key="metadata.activate">true</entry>

        <!--connector Metadata -->
        <entry key="connector.node.url">${CONNECTOR_URL}/</entry>
        <entry key="connector.contact.email">test@com</entry>
        <entry key="connector.metadata.url">${CONNECTOR_URL}/ConnectorMetadata</entry>

       <!--service Metadata -->
        <entry key="service.node.url">${PROXY_URL}/</entry>
        <entry key="service.contact.email">test@com</entry>
        <entry key="service.metadata.url">${SERVICE_METADATA_URL}</entry>

	<entry key="metadata.file.repository">c:\Pgm\projects\configeidas\tomcat\metadata</entry>
	<entry key="metadata.http.retrieval">true</entry>

         <!-- Eidas Node Service Metadata Single Sign On locations for ServiceMetadata-->
	<entry key="ssos.serviceMetadataGeneratorIDP.redirect.location">${NODE_METADATA_SSO_LOCATION}</entry>
	<entry key="ssos.serviceMetadataGeneratorIDP.post.location">${NODE_METADATA_SSO_LOCATION}</entry>

         <!-- Eidas Node Service Metadata Single Sign On locations for ConnectorResponseMetadata-->
	<entry key="ssos.connectorMetadataGeneratorIDP.redirect.location">${CONNECTOR_URL}/ServiceProvider</entry>
	<entry key="ssos.connectorMetadataGeneratorIDP.post.location">${CONNECTOR_URL}/ServiceProvider</entry>

	<!--
        Check that the citizen country code in the SAMLRequest is the same than the country of the Service signing certificate
    -->
    <entry key="check.citizenCertificate.serviceCertificate">false</entry>

    <!-- Feature selector for the security header added to the EidasNode-->
    <!-- This feature once disabled, switch off the content security policy-->
    <entry key="security.header.CSP.enabled">true</entry>
    <!-- Header specific for mozilla browser backwards compatibility : xhr-src: 'self' -->
    <entry key="security.header.CSP.includeMozillaDirectives">true</entry>
    <!-- X-XSS-Protection:1; mode=block -->
    <entry key="security.header.XXssProtection.block">true</entry>
    <!-- X-Content-Type-Options:nosniff -->
    <entry key="security.header.XContentTypeOptions.noSniff">true</entry>
    <!-- X-Frame-Options:SAMEORIGIN -->
    <entry key="security.header.XFrameOptions.sameOrigin">false</entry>
    <!-- Strict-Transport-Security:max-age=600000; includeSubdomains -->
    <entry key="security.header.HSTS.includeSubDomains">true</entry>
	<!-- value of the SPType to be published in the metadata-->
	<entry key="metadata.sector">public</entry>

	<entry key="hashDigest.className">org.bouncycastle.crypto.digests.SHA512Digest</entry>

	<!-- sets the mapprovider for req-rep correlations, antireplay and metadata to distributed - hazelcast needs to be configured for this option -->
	<entry key="distributedMaps">false</entry>

	<!-- sets the the applicaiton configuration in production mode, overrinding the values for some of the parameters -->
	<entry key="productionmode">false</entry>

	<!-- check signature of entitydescriptors in metadata -->
	<entry key="metadata.check.signature">true</entry>
	<!-- allows metadata retrieval only using https -->
	<entry key="metadata.restrict.http">false</entry>
	<!-- enforce encryption of the SAML response -->
	<entry key="response.encryption.mandatory">true</entry>

	<!-- disable the check that the list of attributes contains at least the minimum set (when set to true) -->
	<entry key="disable.check.mandatory.eidas.attributes">false</entry>

	<!-- level of assurance for the service -->
	<entry key="service.LoA">http://eidas.europa.eu/LoA/high</entry>
	<!-- duration of validity for dynamic metadata (in seconds) -->
	<entry key="metadata.validity.duration">86400000</entry>
	<!-- list of urls corresponding to entity descriptors whose signatures have not to be checked
		the format to use is
		http://descriptorurl1;https://descriptorurl2;
	-->
	<entry key="node.metadata.not.signed.descriptors"></entry>
	<!-- connector metadata url, advertising connector as IdP, for communication with the SP -->
	<entry key="connector.responder.metadata.url">${EXT_CONNECTOR_URL}/ConnectorResponderMetadata</entry>
	<!-- service/Specific metadata url, advertising connector as SP - for communication with the IdP -->
	<entry key="service.requester.metadata.url">${PROXY_URL}/ServiceRequesterMetadata</entry>

	<!-- whether the connector supports SPs not able to create SAML requests -->
	<entry key="eidas.supportFramingSamlRequest">false</entry>


	<!-- metadata contact attributes -->
		<!-- Connector-->
	<entry key="connector.contact.support.email">contact.support@eidas-connector.eu</entry>
	<entry key="connector.contact.support.company">eIDAS Connector Operator</entry>
	<entry key="connector.contact.support.givenname">John</entry>
	<entry key="connector.contact.support.surname">Doe</entry>
	<entry key="connector.contact.support.phone">+40 123456</entry>
	<entry key="connector.contact.technical.email">contact.technical@eidas-connector.eu</entry>
	<entry key="connector.contact.technical.company">eIDAS Connector Operator</entry>
	<entry key="connector.contact.technical.givenname">John</entry>
	<entry key="connector.contact.technical.surname">Doe</entry>
	<entry key="connector.contact.technical.phone">+41 123456</entry>
		<!-- ProxyService-->
	<entry key="service.contact.support.email">contact.support@eidas-proxyservice.eu</entry>
	<entry key="service.contact.support.company">eIDAS ProxyService Operator</entry>
	<entry key="service.contact.support.givenname">John</entry>
	<entry key="service.contact.support.surname">Doe</entry>
	<entry key="service.contact.support.phone">+42 123456</entry>
	<entry key="service.contact.technical.email">contact.technical@eidas-proxyservice.eu</entry>
	<entry key="service.contact.technical.company">eIDAS ProxyService Operator</entry>
	<entry key="service.contact.technical.givenname">John</entry>
	<entry key="service.contact.technical.surname">Doe</entry>
	<entry key="service.contact.technical.phone">+43 123456</entry>

	<!-- sets the application able to understand eidas message format only (true)or able to understand eidas message format and STORK 1 message format (false)-->
	<entry key="eidasNodeOnly">false</entry>

</properties>
